---
import Master from "@/layouts/Master.astro";
import BackToHome from "@/components/reusables/navigation/BackToHome.astro";
import StyledBlockquote, {
  BlockquoteType,
} from "@/components/reusables/text-elements/StyledBlockquote.tsx";
import CompleteCurrentLocalTime from "@/components/reusables/date/GetCurrentDate.tsx";
interface Props {
  locale: string;
  metaTitle: string;
  metaDescription: string;
  metaKeywords: string;
  metaImageURL: string;
  metaImageFormat: string;
  metaImageWidth: string;
  metaImageHeight: string;
  metaImageAlt: string;
  localizedBackToHome: string;
  localizedHeader: string;
  localizedSocials: string;
  localizedWebReleases: string;
  localizedContact: string;
  localizedContactMe: string;
  localizedOtherLinks: string;
  localizedSiteMap: string;
  localizedAcknowledgements: string;
  localizedDownloadTheCV: string;
}

const {
  locale,
  metaTitle,
  metaDescription,
  metaKeywords,
  metaImageURL,
  metaImageFormat,
  metaImageWidth,
  metaImageHeight,
  metaImageAlt,
  localizedBackToHome,
  localizedHeader,
  localizedSocials,
  localizedWebReleases,
  localizedContact,
  localizedContactMe,
  localizedOtherLinks,
  localizedSiteMap,
  localizedAcknowledgements,
  localizedDownloadTheCV,
} = Astro.props as Props;
// Skills
let LocalizedSkills;
if (locale === "es") {
  LocalizedSkills = await import("@/components/cv/skills/Skills.es.md");
} else if (locale === "en") {
  LocalizedSkills = await import("@/components/cv/skills/Skills.es.md");
} else {
  LocalizedSkills = await import("@/components/cv/skills/Skills.es.md");
}
const Skills = LocalizedSkills.default;
// Work Experience
let LocalizedWorkExp;
if (locale === "es") {
  LocalizedWorkExp = await import(
    "@/components/cv/work-exp/WorkExperience.es.md"
  );
} else if (locale === "en") {
  LocalizedWorkExp = await import(
    "@/components/cv/work-exp/WorkExperience.es.md"
  );
} else {
  LocalizedWorkExp = await import(
    "@/components/cv/work-exp/WorkExperience.es.md"
  );
}
const WorkExperience = LocalizedWorkExp.default;
// Education
let LocalizedEducation;
if (locale === "es") {
  LocalizedEducation = await import(
    "@/components/cv/education/Education.es.md"
  );
} else if (locale === "en") {
  LocalizedEducation = await import(
    "@/components/cv/education/Education.es.md"
  );
} else {
  LocalizedEducation = await import(
    "@/components/cv/education/Education.es.md"
  );
}
const Education = LocalizedEducation.default;
// AboutMe
let LocalizedAboutMe;
if (locale === "es") {
  LocalizedAboutMe = await import("@/components/cv/about/About.es.md");
} else if (locale === "en") {
  LocalizedAboutMe = await import("@/components/cv/about/About.es.md");
} else {
  LocalizedAboutMe = await import("@/components/cv/about/About.es.md");
}
const AboutMe = LocalizedAboutMe.default;
function localizedHome() {
  if (locale === "es") {
    return `/`;
  } else if (locale) {
    return `/${locale}/`;
  } else {
    return `/`;
  }
}
---

<style>
  article {
    padding-top: 1%;
    padding-bottom: 1%;
    margin-top: 1%;
    margin-bottom: 1%;
  }
</style>
<Master
  locale={locale}
  metaTitle={metaTitle}
  metaDescription={metaDescription}
  metaKeywords={metaKeywords}
  metaImageURL={metaImageURL}
  metaImageFormat={metaImageFormat}
  metaImageWidth={metaImageWidth}
  metaImageHeight={metaImageHeight}
  metaImageAlt={metaImageAlt}
  currentPage="cv"
  localizedHeader={localizedHeader}
  localizedSocials={localizedSocials}
  localizedWebReleases={localizedWebReleases}
  localizedContact={localizedContact}
  localizedContactMe={localizedContactMe}
  localizedOtherLinks={localizedOtherLinks}
  localizedSiteMap={localizedSiteMap}
  localizedAcknowledgements={localizedAcknowledgements}
>
  <article id="aboutme-card">
    <AboutMe />
  </article>
  <article id="skills-card">
    <Skills />
    <div class="flex justify-end">
      <StyledBlockquote blockquoteType={BlockquoteType.Warning}>
        <span class="dank-mono ml-2">This is outdated!</span>
      </StyledBlockquote>
    </div>
  </article>
  <article id="work-exp-card">
    <WorkExperience />
    <div class="flex flex-grow justify-end" title={localizedDownloadTheCV}>
      <div
        class="cursor-pointer glassbox button-glassbox p-1 rounded-lg items-center"
      >
        <div class="dark:invert inline-block">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="dark:invert h-10 w-auto"
            viewBox="0 0 24 24"
            ><path
              fill="currentColor"
              d="m12 15.577l-3.539-3.538l.708-.72L11.5 13.65V5h1v8.65l2.33-2.33l.709.719zM6.616 19q-.691 0-1.153-.462T5 17.384v-2.423h1v2.423q0 .231.192.424t.423.192h10.77q.23 0 .423-.192t.192-.424v-2.423h1v2.423q0 .691-.462 1.153T17.384 19z"
            ></path>
          </svg>
        </div>
      </div>
    </div>
  </article>
  <article id="education-card">
    <Education />
  </article>
  <div class="mt-[2%] mobile-only:mt-[5%] flex justify-end">
    <StyledBlockquote blockquoteType={BlockquoteType.Updated}>
      <div class="flex items-center">
        <CompleteCurrentLocalTime c="dank-mono text-base" lang={locale} />
      </div>
    </StyledBlockquote>
  </div>
  <BackToHome localizedText={localizedBackToHome} homeURL={localizedHome()} />
</Master>

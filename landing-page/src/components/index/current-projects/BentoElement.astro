---
// Anchors
import A from "@/components/reusables/anchors/SimpleExternalAnchor.tsx";
// Tags
import Abandoned from "@/components/reusables/tags/Abandoned.tsx";
import Archived from "@/components/reusables/tags/Archived.tsx";
import Maintained from "@/components/reusables/tags/Maintained";
import OnHold from "@/components/reusables/tags/OnHold.tsx";
import UnderDevelopment from "@/components/reusables/tags/UnderDevelopment";
import NDA from "@/components/reusables/tags/NDA";
import { TagType } from "@/types/TagType.ts";
import RepoProvider, {
  RepoHosting,
} from "@/components/index/current-projects/RepositoryHosting.tsx";

interface Props {
  bentoID: string;
  locale: string;
  projectTitle: string;
  projectStatus: TagType;
  repoLink: string;
  repoHosting: string;
}

const { bentoID, locale, projectTitle, projectStatus, repoLink, repoHosting } =
  Astro.props as Props;
---

<div id={bentoID} class="glassbox p-3 rounded-lg grid grid-cols-1 cursor-auto">
  <div class="flex items-center justify-evenly">
    <div class="flex items-center">
      <A h={repoLink} c="flex items-center">
        <div
          class="inline-block items-center dark:invert mr-2"
          title={projectTitle}
        >
          <RepoProvider rh={repoHosting as keyof typeof RepoHosting} />
        </div>
        <div class="inline-block">
          <h3 class="geist-variable font-semibold select-none text-base">
            {projectTitle}
          </h3>
        </div>
      </A>
    </div>
    <div class="flex gap-x-2">
      {
        projectStatus === TagType.Abandoned && (
          <Abandoned lang={locale} client:load />
        )
      }
      {
        projectStatus === TagType.Archived && (
          <Archived lang={locale} client:load />
        )
      }
      {
        projectStatus === TagType.Maintained && (
          <Maintained lang={locale} client:load />
        )
      }
      {projectStatus === TagType.OnHold && <OnHold lang={locale} client:load />}
      {
        projectStatus === TagType.UnderDevelopment && (
          <UnderDevelopment lang={locale} client:load />
        )
      }
      {projectStatus === TagType.NDA && <NDA lang={locale} client:load />}
    </div>
  </div>
  <div class="flex flex-wrap ml-1 mt-1">
    <slot />
  </div>
</div>
